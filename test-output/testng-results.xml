<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="57572" started-at="2017-02-15T10:28:03Z" finished-at="2017-02-15T10:29:00Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="57572" started-at="2017-02-15T10:28:03Z" finished-at="2017-02-15T10:29:00Z">
      <class name="testcases.RegisteredUserRegularOrderPayAtRestaurant">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testcases.RegisteredUserRegularOrderPayAtRestaurant@464bee09]" name="beforeSuite" is-config="true" duration-ms="919" started-at="2017-02-15T03:28:02Z" finished-at="2017-02-15T03:28:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testcases.RegisteredUserRegularOrderPayAtRestaurant@464bee09]" name="beforeTest" is-config="true" duration-ms="1" started-at="2017-02-15T03:28:03Z" finished-at="2017-02-15T03:28:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testcases.RegisteredUserRegularOrderPayAtRestaurant@464bee09]" name="beforeClass" is-config="true" duration-ms="1" started-at="2017-02-15T03:28:03Z" finished-at="2017-02-15T03:28:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.RegisteredUserRegularOrderPayAtRestaurant@464bee09]" name="beforeMethod" is-config="true" duration-ms="8923" started-at="2017-02-15T03:28:03Z" finished-at="2017-02-15T03:28:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.RegisteredUserRegularOrderPayAtRestaurant@464bee09]" name="login" duration-ms="47146" started-at="2017-02-15T03:28:12Z" data-provider="fetchData" finished-at="2017-02-15T03:28:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sudharsan.kg@saggezza.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qwerty123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[White Rice ($0.49)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[03/03/2017]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[12:00 PM]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[March 3]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[sudharsan.kg@saggezza.com]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[sudharsan@27]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Order Confirmation]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[FAILED]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: FAILED
	at utils.Reporter.reportStep(Reporter.java:38)
	at wrappers.GenericWrappers.clickByXpath(GenericWrappers.java:333)
	at pages.MenuAndOrder.clickJapeneseSteak(MenuAndOrder.java:73)
	at testcases.RegisteredUserRegularOrderPayAtRestaurant.login(RegisteredUserRegularOrderPayAtRestaurant.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.RegisteredUserRegularOrderPayAtRestaurant@464bee09]" name="afterMethod" is-config="true" duration-ms="965" started-at="2017-02-15T03:28:59Z" finished-at="2017-02-15T03:29:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testcases.RegisteredUserRegularOrderPayAtRestaurant@464bee09]" name="afterTest" is-config="true" duration-ms="0" started-at="2017-02-15T03:29:00Z" finished-at="2017-02-15T03:29:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testcases.RegisteredUserRegularOrderPayAtRestaurant@464bee09]" name="afterSuite" is-config="true" duration-ms="492" started-at="2017-02-15T03:29:00Z" finished-at="2017-02-15T03:29:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testcases.RegisteredUserRegularOrderPayAtRestaurant -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
